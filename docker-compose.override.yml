version: '3.1'

services:
    # --------------------------------------------------------------
    #
    #   Change this if your want use your own application.
    #   It's very important expose your application in port 5442
    #   and use the http protocol.
    # 
    #   Default Application
    #
    #   Openvidu-Call Version: 2.14.0
    #
    # --------------------------------------------------------------
    # gateway:
    #     image: nginx:alpine
    #     container_name: videoconference.dev.router
    #     restart: always
    #     networks:
    #         - videoconference-net
    #         # - stage-routing
    #     ports:
    #         - "80"
    #     depends_on:
    #         - app
    #     volumes:
    #         - ./nginx/conf.d:/etc/nginx/conf.d

    openvidu-server:
        container_name: videoconference.openvidu-server

    kms:
        container_name: videoconference.kms

    redis:
        container_name: videoconference.redis

    coturn:
        container_name: videoconference.openvidu-coturn

    nginx:
        # container_name: videoconference.nginx
        container_name: videoconference.dev.router
        # networks:
        #     - videoconference-net
            # - stage-routing
    
    app:
        image: openvidu/openvidu-call:2.14.0
        container_name: videoconference.app
        restart: on-failure
        network_mode: host
        environment: 
            - SERVER_PORT=5442
            - OPENVIDU_URL=http://localhost:5443
            - OPENVIDU_SECRET=${OPENVIDU_SECRET}
            - CALL_OPENVIDU_CERTTYPE=${CERTIFICATE_TYPE}
        # expose:
        #     - "80"
        # ports:
            # - "80:80"
            # - "3478:3478"
            # - "5442:5442"
            # - "5443:5443"
            # - "8888:8888"
            # - "6379:6379"

networks:
    videoconference-net:
        driver: bridge
    # stage-routing:
    #     external:
    #         name: stage-routing